{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovie","a","fetch","response","json","Promise","reject","status","text","FindMovie","addMovie","useState","setTitle","setMovie","setImdbId","setDescription","setImgUrl","setImdbUrl","movieIsNotFound","setStatus","onSubmit","event","preventDefault","then","result","Title","imdbID","Plot","Poster","htmlFor","type","id","value","onChange","target","placeholder","classNames","onClick","newMovie","find","film","App","data","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72ed35d5.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const url = 'https://www.omdbapi.com/?apikey=7942a07a&t=';\n\nexport const getMovie = async(title) => {\n  const response = await fetch(`${url}${title}`);\n\n  try {\n    return response.json();\n  } catch {\n    // eslint-disable-next-line\n        return Promise.reject(\n      `${response.status} ${response.status.text}`,\n    );\n  }\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\nexport const FindMovie = ({ addMovie, movies }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState();\n  const [imdbId, setImdbId] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [movieIsNotFound, setStatus] = useState(false);\n\n  function findMovieByTitle(event) {\n    event.preventDefault();\n    getMovie(title)\n      .then((result) => {\n        try {\n          setMovie(result.Title);\n          setImdbId(result.imdbID);\n          setDescription(result.Plot);\n          setImgUrl(result.Poster);\n          setImdbUrl(`https://www.imdb.com/title/${result.imdbID}`);\n          setStatus(false);\n        } catch {\n          setStatus(true);\n        }\n      });\n  }\n\n  function addNewMovie() {\n    const newMovie = {\n      title: movie,\n      description,\n      imdbId,\n      imgUrl,\n      imdbUrl,\n    };\n\n    if (!movies.find(film => film.imdbId === newMovie.imdbId)\n      && !movieIsNotFound\n      && movie\n    ) {\n      addMovie([...movies, newMovie]);\n      setTitle('');\n      setMovie('');\n      setImdbId('');\n      setDescription('');\n      setImgUrl('');\n      setImdbUrl('');\n    }\n  }\n\n  function changeValue(event) {\n    const { value } = event.target;\n\n    setStatus(false);\n    setTitle(value);\n  }\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={findMovieByTitle}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={title}\n              onChange={changeValue}\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': movieIsNotFound })}\n            />\n          </div>\n\n          {movieIsNotFound\n        && (\n        <p className=\"help is-danger\">\n          Can&apos;t find a movie with such a title\n        </p>\n        )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addNewMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {!movieIsNotFound && movie\n      && (\n      <MovieCard\n        title={movie}\n        description={description}\n        imgUrl={imgUrl}\n        imdbUrl={imdbUrl}\n        imdbId={imdbId}\n      />\n      )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={setMovies} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}